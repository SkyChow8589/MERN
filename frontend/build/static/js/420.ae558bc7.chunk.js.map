{"version":3,"file":"static/js/420.ae558bc7.chunk.js","mappings":"yLAIA,MAuBA,EAvBaA,IACX,MAAMC,GAASC,EAAAA,EAAAA,WAET,OAAEC,EAAM,KAAEC,GAASJ,EAWzB,OATAK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAM,IAAIC,OAAOC,OAAOC,KAAKC,IAAIT,EAAOU,QAAS,CACrDR,OAAQA,EACRC,KAAMA,IAGR,IAAIG,OAAOC,OAAOC,KAAKG,OAAO,CAAEC,SAAUV,EAAQG,IAAKA,GAAM,GAC5D,CAACH,EAAQC,KAGVU,EAAAA,EAAAA,KAAA,OACEC,IAAKd,EACLe,UAAW,OAAOhB,EAAMgB,YACxBC,MAAOjB,EAAMiB,OACR,E,wCCXX,MAuGA,EAvGmBjB,IACjB,MAAM,UAAEkB,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,KAChDC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IACjBC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAkBC,IAAuBF,EAAAA,EAAAA,WAAS,GAInDG,EAAkBA,IAAMJ,GAAW,GAMnCK,EAAsBA,KAC1BF,GAAoB,EAAM,EAkB5B,OACEG,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACjB,MAAOA,EAAOkB,QAAShB,KACnCP,EAAAA,EAAAA,KAACwB,EAAAA,EAAK,CACJC,KAAMb,EACNc,SAAUT,EACVU,OAAQzC,EAAM0C,QACdC,aAAa,4BACbC,YAAY,4BACZC,QAAQ/B,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACC,QAAShB,EAAgBI,SAAC,UAAeA,UAEzDrB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAemB,UAC5BrB,EAAAA,EAAAA,KAACJ,EAAG,CAACP,OAAQH,EAAMgD,YAAa5C,KAAM,UAG1CU,EAAAA,EAAAA,KAACwB,EAAAA,EAAK,CACJC,KAAMV,EACNW,SAAUR,EACVS,OAAO,gBACPG,YAAY,4BACZC,QACEZ,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACG,SAAO,EAACF,QAASf,EAAoBG,SAAC,YAG9CrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACI,QAAM,EAACH,QAxCII,UAC3BrB,GAAoB,GACpB,UACQV,EACgC,oCAAWpB,EAAMoD,KACrD,SACA,KACA,CACEC,cAAe,UAAY9B,EAAK+B,QAGpCtD,EAAMuD,SAASvD,EAAMoD,GACvB,CAAE,MAAOI,GAAM,GA4BsCrB,SAAC,cAIjDA,UAEDrB,EAAAA,EAAAA,KAAA,KAAAqB,SAAG,qGAKLrB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYmB,UACxBF,EAAAA,EAAAA,MAACwB,EAAAA,EAAI,CAACzC,UAAU,sBAAqBmB,SAAA,CAClCjB,IAAaJ,EAAAA,EAAAA,KAAC4C,EAAAA,EAAc,CAACC,WAAS,KACvC7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBmB,UAChCrB,EAAAA,EAAAA,KAAA,OACE8C,IAAK,yBAAsC5D,EAAM6D,QACjDC,IAAK9D,EAAM+D,WAGf9B,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,mBAAkBmB,SAAA,EAC/BrB,EAAAA,EAAAA,KAAA,MAAAqB,SAAKnC,EAAM+D,SACXjD,EAAAA,EAAAA,KAAA,MAAAqB,SAAKnC,EAAM0C,WACX5B,EAAAA,EAAAA,KAAA,KAAAqB,SAAInC,EAAMgE,kBAEZ/B,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,sBAAqBmB,SAAA,EAClCrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACG,SAAO,EAACF,QA9EHkB,IAAMtC,GAAW,GA8EUQ,SAAC,gBAGxCZ,EAAK2C,SAAWlE,EAAMmE,YACrBrD,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACsB,GAAI,WAAWpE,EAAMoD,KAAKjB,SAAC,SAGpCZ,EAAK2C,SAAWlE,EAAMmE,YACrBrD,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACI,QAAM,EAACH,QAlFMsB,KAC/BvC,GAAoB,EAAK,EAiFkCK,SAAC,qBAO3C,ECzErB,EA/BmBnC,GACU,IAAvBA,EAAMsE,MAAMC,QAEZzD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBmB,UAChCF,EAAAA,EAAAA,MAACwB,EAAAA,EAAI,CAAAtB,SAAA,EACHrB,EAAAA,EAAAA,KAAA,MAAAqB,SAAI,wCACJrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACsB,GAAG,cAAajC,SAAC,sBAO/BrB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYmB,SACvBnC,EAAMsE,MAAMhE,KAAKkE,IAChB1D,EAAAA,EAAAA,KAAC2D,EAAS,CAERrB,GAAIoB,EAAMpB,GACVS,MAAOW,EAAMX,MACbE,MAAOS,EAAMT,MACbC,YAAaQ,EAAMR,YACnBtB,QAAS8B,EAAM9B,QACfyB,UAAWK,EAAME,QACjB1B,YAAawB,EAAMG,SACnBpB,SAAUvD,EAAM4E,eARXJ,EAAMpB,QCwBrB,EAvCmByB,KACjB,MAAOC,EAAcC,IAAmBnD,EAAAA,EAAAA,aAClC,UAAEV,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,KAEhD4C,GAASc,EAAAA,EAAAA,KAAYd,QAE3B7D,EAAAA,EAAAA,YAAU,KACY8C,WAClB,IACE,MAAM8B,QAAqB7D,EACzB,yCAAoD8C,KAEtDa,EAAgBE,EAAaC,OAC/B,CAAE,MAAO1B,GAAM,GAEjB2B,EAAa,GACZ,CAAC/D,EAAa8C,IAQjB,OACEjC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACjB,MAAOA,EAAOkB,QAAShB,IAClCH,IACCJ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQmB,UACrBrB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAc,OAGjBxC,GAAa4D,IACbhE,EAAAA,EAAAA,KAACsE,EAAS,CAACd,MAAOQ,EAAcF,cAfTS,IAC3BN,GAAiBO,GACfA,EAAWC,QAAQf,GAAUA,EAAMpB,KAAOiC,KAC3C,MAcgB,C,6DCtCrB,MAwCA,EAxCgBrF,GACVA,EAAMwF,MAEN1E,EAAAA,EAAAA,KAAA,KACEE,UAAW,kBAAkBhB,EAAMyF,MAAQ,aACzCzF,EAAMiD,SAAW,qBACfjD,EAAMkD,QAAU,mBACpBsC,KAAMxF,EAAMwF,KAAKrD,SAEhBnC,EAAMmC,WAITnC,EAAMoE,IAENtD,EAAAA,EAAAA,KAAC4E,EAAAA,GAAI,CACHtB,GAAIpE,EAAMoE,GACVuB,MAAO3F,EAAM2F,MACb3E,UAAW,kBAAkBhB,EAAMyF,MAAQ,aACzCzF,EAAMiD,SAAW,qBACfjD,EAAMkD,QAAU,mBAAmBf,SAEtCnC,EAAMmC,YAKXrB,EAAAA,EAAAA,KAAA,UACEE,UAAW,kBAAkBhB,EAAMyF,MAAQ,aACzCzF,EAAMiD,SAAW,qBACfjD,EAAMkD,QAAU,mBACpB0C,KAAM5F,EAAM4F,KACZ7C,QAAS/C,EAAM+C,QACf8C,SAAU7F,EAAM6F,SAAS1D,SAExBnC,EAAMmC,U,oDCpCb,MAQA,EARanC,IAETc,EAAAA,EAAAA,KAAA,OAAKE,UAAW,QAAQhB,EAAMgB,YAAaC,MAAOjB,EAAMiB,MAAMkB,SAC3DnC,EAAMmC,U,sECFb,MAaA,EAboBnC,IAEhBc,EAAAA,EAAAA,KAACwB,EAAAA,EAAK,CACJE,SAAUxC,EAAMqC,QAChBI,OAAO,qBACPF,OAAQvC,EAAMmB,MACd0B,QAAQ/B,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACC,QAAS/C,EAAMqC,QAAQF,SAAC,SAAcA,UAEtDrB,EAAAA,EAAAA,KAAA,KAAAqB,SAAInC,EAAMmB,S,+ECNhB,MAAM2E,EAAgB9F,IACpB,MAAM+F,GACJ9D,EAAAA,EAAAA,MAAA,OAAKjB,UAAW,SAAShB,EAAMgB,YAAaC,MAAOjB,EAAMiB,MAAMkB,SAAA,EAC7DrB,EAAAA,EAAAA,KAAA,UAAQE,UAAW,iBAAiBhB,EAAMgG,cAAc7D,UACtDrB,EAAAA,EAAAA,KAAA,MAAAqB,SAAKnC,EAAMyC,YAEbR,EAAAA,EAAAA,MAAA,QACEgE,SACEjG,EAAMiG,SAAWjG,EAAMiG,SAAYC,GAAUA,EAAMC,iBACpDhE,SAAA,EAEDrB,EAAAA,EAAAA,KAAA,OAAKE,UAAW,kBAAkBhB,EAAM2C,eAAeR,SACpDnC,EAAMmC,YAETrB,EAAAA,EAAAA,KAAA,UAAQE,UAAW,iBAAiBhB,EAAM4C,cAAcT,SACrDnC,EAAM6C,eAKf,OAAOuD,EAAAA,aAAsBL,EAASM,SAASC,eAAe,cAAc,EAoB9E,EAjBetG,IAEXiC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,CACZnC,EAAMuC,OAAQzB,EAAAA,EAAAA,KAACyF,EAAAA,EAAQ,CAACxD,QAAS/C,EAAMwC,YACxC1B,EAAAA,EAAAA,KAAC0F,EAAAA,EAAa,CACZC,GAAIzG,EAAMuC,KACVmE,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,QAAO1E,UAElBrB,EAAAA,EAAAA,KAACgF,EAAY,IAAK9F,Q,6CCvCnB,MAAMsB,EAAgBA,KAC3B,MAAOJ,EAAW4F,IAAgBlF,EAAAA,EAAAA,WAAS,IACpCT,EAAO4F,IAAYnF,EAAAA,EAAAA,YAEpBoF,GAAqB9G,EAAAA,EAAAA,QAAO,IAE5BkB,GAAc6F,EAAAA,EAAAA,cAClB9D,eAAO+D,GAAoD,IAA/CC,EAAMC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAG,MAAOE,EAAIF,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAOH,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClDN,GAAa,GACb,MAAMU,EAAgB,IAAIC,gBAC1BT,EAAmBrG,QAAQ+G,KAAKF,GAEhC,IACE,MAAMG,QAAiBC,MAAMV,EAAK,CAChCC,SACAG,OACAC,UACAM,OAAQL,EAAcK,SAGlB5C,QAAqB0C,EAASG,OAMpC,GAJAd,EAAmBrG,QAAUqG,EAAmBrG,QAAQ4E,QACrDwC,GAAYA,IAAYP,KAGtBG,EAASK,GACZ,MAAM,IAAIC,MAAMhD,EAAaiD,SAI/B,OADApB,GAAa,GACN7B,CACT,CAAE,MAAOzB,GAGP,MAFAuD,EAASvD,EAAI0E,SACbpB,GAAa,GACPtD,CACR,CACF,GACA,IAcF,OAPAnD,EAAAA,EAAAA,YAAU,IACD,KAEL2G,EAAmBrG,QAAQwH,SAASC,GAAcA,EAAUC,SAAQ,GAErE,IAEI,CAAEnH,YAAWC,QAAOC,cAAaC,WAXrBA,KACjB0F,EAAS,KAAK,EAUoC,C","sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n\r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom,\r\n    });\r\n\r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./PlaceItem.css\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport \"./PlaceList.css\";\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || \"default\"} ${\r\n        props.inverse && \"button--inverse\"\r\n      } ${props.danger && \"button--danger\"}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../FormElements/Button\";\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n"],"names":["props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","Map","current","Marker","position","_jsx","ref","className","style","isLoading","error","sendRequest","clearError","useHttpClient","auth","useContext","AuthContext","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","_jsxs","React","children","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","async","id","Authorization","token","onDelete","err","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","openMapHandler","userId","creatorId","to","showDeleteWarningHandler","items","length","place","PlaceItem","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","PlaceList","deletedPlaceId","prevPlaces","filter","href","size","Link","exact","type","disabled","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHttpRequests","useCallback","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","json","reqCtrl","ok","Error","message","forEach","abortCtrl","abort"],"sourceRoot":""}