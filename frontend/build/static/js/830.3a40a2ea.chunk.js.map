{"version":3,"file":"static/js/830.3a40a2ea.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./PlaceForm.css\";\r\n\r\nconst UpdatePlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const placeId = useParams().placeId;\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n        );\r\n        setLoadedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  const placeUpdateSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      history.push(\"/\" + auth.userId + \"/places\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (min. 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || \"default\"} ${\r\n        props.inverse && \"button--inverse\"\r\n      } ${props.danger && \"button--danger\"}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../FormElements/Button\";\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["UpdatePlace","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","loadedPlace","setLoadedPlace","useState","placeId","useParams","history","useHistory","formState","inputHandler","setFormData","useForm","title","value","isValid","description","useEffect","async","responseData","place","err","fetchPlace","_jsx","className","children","LoadingSpinner","_jsxs","React","ErrorModal","onClear","onSubmit","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","props","href","size","inverse","danger","to","Link","exact","onClick","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","useRef","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","response","fetch","signal","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}